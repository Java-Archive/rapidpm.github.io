<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Fluent</title>
    <category label="Fluent"/>
    <updated>2015-04-13T08:47:59.332+02:00</updated>
    <id>http://rapidpm.github.io</id>
    <author>
        <name>Alexander Bischof</name>
    </author>
    <entry>
        <title>Introducing TinkerForge-Fluent</title>
        <category label="Java"/>
        <category label="Tinkerforge"/>
        <category label="IOT"/>
        <category label="Fluent"/>
        <published>2014-12-19T00:00:00+01:00</published>
        <author>
            <name>Alexander Bischof</name>
        </author>
        <content type="html">&lt;div class="blog-post"&gt;
&lt;h2 class="blog-post-title"&gt;&lt;a href=/2014/12/19/introducing-tinkerforge-fluent.html&gt;Introducing TinkerForge-Fluent&lt;/a&gt;&lt;/h2&gt;
&lt;p class="blog-post-meta"&gt;2014-12-19 from &lt;a href="/team/alexander-bischof/"&gt;Alexander Bischof&lt;/a&gt;&lt;/p&gt;
Having engaged myself in contributing to &lt;a href="http://joel-costigliola.github.io/assertj/"&gt;AssertJ&lt;/a&gt; i stumbled over the idea of making
the Tinkerforge API more fluent. So this short article represents a first approach of a fluent Java-Tinkerforge API which
uses all the advantages of &lt;a href="http://de.wikipedia.org/wiki/Fluent_Interface"&gt;fluent interfaces&lt;/a&gt;.
&lt;br/&gt;&lt;br/&gt;

Consider the following example which connects to a temperature, an ambientlight, a barometer and a humdity sensor and prints all changes
 on the &lt;i&gt;System.out&lt;/i&gt;.
&lt;pre class="brush: java"&gt;
IPConnection ipcon = new IPConnection();
BrickletTemperature brickletTemperature = new BrickletTemperature("dXj", ipcon);
BrickletAmbientLight brickletAmbientLight = new BrickletAmbientLight("jy2", ipcon);
BrickletBarometer brickletBarometer = new BrickletBarometer("jY4", ipcon);
BrickletHumidity brickletHumidity = new BrickletHumidity("kfd", ipcon);

ipcon.connect("localhost", 4223);

brickletTemperature.setTemperatureCallbackPeriod(100);
brickletTemperature.addTemperatureListener(temperature -&gt; System.out.println("temperature: " + temperature));

brickletAmbientLight.setIlluminanceCallbackPeriod(100);
brickletAmbientLight.addIlluminanceListener(ambientLight -&gt; System.out.println("ambientLight: " + ambientLight));

brickletBarometer.setAirPressureCallbackPeriod(100);
brickletBarometer.addAirPressureListener(airpressure -&gt; System.out.println("airpressure: " + airpressure));

brickletHumidity.setHumidityCallbackPeriod(100);
brickletHumidity.addHumidityListener(humidity -&gt; System.out.println("humidity: " + humidity));

System.out.println("Press key to exit");
System.in.read();
ipcon.disconnect();
&lt;/pre&gt;

And now look at this one: ;)
&lt;pre class="brush: java"&gt;
IPConnection ipcon = Tinkerforges.connectTo("localhost")
 .withSensor(temperature("dXj").temperaturListener(e -&gt; System.out.println("temperature: " + e)))
 .withSensor(ambientLight("jy2").illuminanceListener(e -&gt; System.out.println("ambientLight: " + e)))
 .withSensor(barometer("jY4").airPressureListener(e -&gt; System.out.println("airpressure: " + e)))
 .withSensor(humidity("kfd").humidityListener(e -&gt; System.out.println("humidity: " + e)))
 .build();

 System.out.println("Press key to exit");
 System.in.read();
 ipcon.disconnect();
&lt;/pre&gt;

You are probably miss the port and callbackperiod which i have defaulted (ala configuration over convention) with reasonable values.
 With that you have to write less repititve code which makes the code more compact and therefore more readable.
&lt;br/&gt;&lt;br/&gt;
The snippet itself could be compacted more with the use of &lt;i&gt;java.lang.Closable&lt;/i&gt; on the internal &lt;i&gt;IPConnectionBase&lt;/i&gt; class. Unfortunately
the tinkerforge source is still on JDK5.
&lt;br/&gt;&lt;br/&gt;
Have a look at my &lt;a href="https://github.com/AlexBischof/Tinkerforge-Fluent.git"&gt;repository&lt;/a&gt; and feel free to contribute.
Currently it only contains the bricklets mentioned above.

&lt;/div&gt;</content>
        <summary></summary>
    </entry>
</feed>
